<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[dqn.fish]]></title>
        <description><![CDATA[dqn.fish]]></description>
        <link>https://dqn.fish</link>
        <image>
            <url>https://dqn.fish/favicon.png</url>
            <title>dqn.fish</title>
            <link>https://dqn.fish</link>
        </image>
        <generator>dqn.fish</generator>
        <lastBuildDate>Thu, 05 Nov 2020 15:33:54 GMT</lastBuildDate>
        <atom:link href="https://dqn.fish/feed.xml" rel="self" type="application/rss+xml"/>
        <copyright><![CDATA[(C) dqn]]></copyright>
        <language><![CDATA[ja]]></language>
        <item>
            <title><![CDATA[Brainfuck にコンパイル可能な高水準言語を作った話]]></title>
            <description><![CDATA[少し前に Bigbrain という自作言語を作ったので紹介します。この言語は Brainfuck にコンパイルされます。ソースコードは GitHub で公開されています。 https://github.com/dqn/bigbrain Bigbrain という名前は、知的であることを意味する「Big brain」というスラングが由来です。 例 次のような Bigbrain のコードをコンパイルすると、 x = 30; for (i = 1; i >>+++++-]>[>>+[-]+>[+>-]+>+>[>-]>>+>+>>>[>>>-]>+>+>>[>>-]+>>-[>-]-[+>>+>>[>...]]></description>
            <link>https://dqn.fish/articles/2020-11-03-high-level-programming-language-that-can-be-compiled-to-brainfuck</link>
            <guid isPermaLink="true">https://dqn.fish/articles/2020-11-03-high-level-programming-language-that-can-be-compiled-to-brainfuck</guid>
            <dc:creator><![CDATA[dqn]]></dc:creator>
            <pubDate>Tue, 03 Nov 2020 03:33:32 GMT</pubDate>
            <enclosure url="https://dqn.fish/favicon.png" length="0" type="image/png"/>
        </item>
        <item>
            <title><![CDATA[HTTP クライアントを実装した話]]></title>
            <description><![CDATA[簡単な HTTP クライアントを実装してみたので、紹介します。この記事での目標は、次のことができるようになることです。 基本的な HTTP メソッドでのリクエスト GET、POST、PUT、DELETE 分割されたレスポンスの読み取り Chunk 化されたレスポンスの読み取り JSON、 FormData を使ったリクエスト リダイレクトの対応 HTTPS のサポート ソースコードを概観したい方は、自分のリポジトリを見ることができます。Node.js + TypeScript で書かれています。 dqn/rqn HTTP の書式 はじめに、HTTP についていくつか知っておく必要があります。H...]]></description>
            <link>https://dqn.fish/articles/2020-10-19-http-client-implementation</link>
            <guid isPermaLink="true">https://dqn.fish/articles/2020-10-19-http-client-implementation</guid>
            <dc:creator><![CDATA[dqn]]></dc:creator>
            <pubDate>Sun, 18 Oct 2020 17:12:22 GMT</pubDate>
            <enclosure url="https://dqn.fish/favicon.png" length="0" type="image/png"/>
        </item>
        <item>
            <title><![CDATA[このサイトについて]]></title>
            <description><![CDATA[このサイトでは技術についての記事を投稿していく予定です。いままで別のプラットフォームで記事は何件か投稿していましたが、以下の理由で個人の技術ブログを始めてみることにしました。 はてなブログ、Qiita、Zenn、Scrapbox など投稿先が分散していたので、統一したい 「いいね」の数を気にせず、気軽にアウトプットしたい 慣れているエディタで、textlint を走らせながら快適に執筆したい Web エンジニアとして、個人サイトを持っておきたい 他のプラットフォームで投稿されている記事は、内容を改め少しずつこのブログにも投稿して行こうと思います。また、他のプラットフォームでの投稿を完全に止める...]]></description>
            <link>https://dqn.fish/articles/2020-10-16-about-this-blog</link>
            <guid isPermaLink="true">https://dqn.fish/articles/2020-10-16-about-this-blog</guid>
            <dc:creator><![CDATA[dqn]]></dc:creator>
            <pubDate>Thu, 15 Oct 2020 19:36:25 GMT</pubDate>
            <enclosure url="https://dqn.fish/favicon.png" length="0" type="image/png"/>
        </item>
    </channel>
</rss>